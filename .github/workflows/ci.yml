name: CI (Lint, Check & Tests)

on:
  push:
    branches: [ main, dev ]
  pull_request:

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    env:
      DJANGO_SETTINGS_MODULE: academia_project.settings
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      USE_SQLITE_FOR_TESTS: "1"
      DJANGO_DEBUG: "1"
      TIME_ZONE: "UTC"
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1,testserver"
      DJANGO_CSRF_TRUSTED_ORIGINS: "http://localhost,http://127.0.0.1"
      PYTHONUTF8: "1"  # salida m√°s estable en CI

    steps:
      - name: Checkout (Revisar c√≥digo) üõéÔ∏è
        uses: actions/checkout@v4

      # uv en lugar de setup-python + pip
      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Python ${{ matrix.python-version }} üêç
        run: uv python install ${{ matrix.python-version }}

      # Instala prod + dev (pytest, ruff, etc.) desde pyproject/uv.lock
      - name: Instalar dependencias con uv üì¶
        run: |
          uv sync --all-groups --locked || uv sync --all-groups

      - name: Lint con Ruff (no bloqueante) üé®
        run: uv run ruff check . || true

      - name: Detectar ruta de manage.py üîç
        id: managepy
        run: |
          if [ -f manage.py ]; then
            echo "path=manage.py" >> $GITHUB_OUTPUT
          elif [ -f academia_project/manage.py ]; then
            echo "path=academia_project/manage.py" >> $GITHUB_OUTPUT
          else
            echo "ERROR: No se encontr√≥ manage.py" >&2
            exit 1
          fi

      - name: Django Check (configuraci√≥n b√°sica) ‚úÖ
        run: uv run python ${{ steps.managepy.outputs.path }} check

      - name: Django Check --deploy (bloqueante) üîí
        env:
          DJANGO_DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: "example.com"
          DJANGO_CSRF_TRUSTED_ORIGINS: "https://example.com"
          SECURE_SSL_REDIRECT: "1"
          USE_PROXY_SSL_HEADER: "1"
        run: uv run python ${{ steps.managepy.outputs.path }} check --deploy --fail-level WARNING

      - name: Verificar que no falten migraciones üìú
        run: uv run python ${{ steps.managepy.outputs.path }} makemigrations --check --dry-run

      - name: Aplicar migraciones en SQLite üõ†Ô∏è
        run: uv run python ${{ steps.managepy.outputs.path }} migrate --noinput

      - name: Ejecutar tests con Pytest üß™
        env:
          RUN_STRICT_HORARIOS_TESTS: "0"
        run: uv run pytest -q
        
- name: Generar cobertura (XML + HTML)
  run: uv run pytest --cov --cov-report=xml --cov-report=html -q

- name: Publicar htmlcov como artefacto
  uses: actions/upload-artifact@v4
  with:
    name: coverage-html
    path: htmlcov
    if-no-files-found: error
